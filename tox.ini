[tox]
envlist = py3-local_os, py3-dind_os, py3-s2search
skipsdist = true
; set this to a branch of your choice. tox will build this into an image called 'marqo_docker_0'
marqo_branch = {env:MQ_API_TEST_BRANCH:mainline}
; set this to a marqo image you want to test. Leave it as 'marqo_docker_0' to test the docker image
; that this tox script builds. You can set it to a marqo image found on dockerhub.
marqo_image_name = {env:MQ_API_TEST_IMG:marqo_docker_0} 

[testenv]
whitelist_externals =
  python
  bash
  docker
deps =
  pytest
  pillow
  numpy
  git+https://github.com/marqo-ai/py-marqo.git@li/add_docs_api
commands_pre =
  bash {toxinidir}{/}scripts{/}clone_marqo_repo.sh {toxinidir} {[tox]marqo_branch}
  bash {toxinidir}{/}scripts{/}pull_remote_image.sh {[tox]marqo_image_name}
commands_post =
  - docker rm -f marqo
  - docker rm -f marqo-os

[testenv:py3-local_os]
setenv =
  TESTING_CONFIGURATION = LOCAL_MARQO_OS
  PYTHONPATH = {toxinidir}{/}tests{:}{toxinidir}
  PATH = {env:PATH}{:}{toxinidir}{/}scripts
  ; this is set in case test needs to stop & rerun marqo.
  MARQO_IMAGE_NAME = {[tox]marqo_image_name}
  ; Note: instead of setting this here, we could run . conf in the startup script itself
  MARQO_API_TESTS_ROOT = {toxinidir}
commands =
  bash {toxinidir}{/}scripts{/}start_local_marqo_os.sh {[tox]marqo_image_name}
  pytest tests/ {posargs}


[testenv:py3-dind_os]
setenv =
  TESTING_CONFIGURATION = DIND_MARQO_OS
  PYTHONPATH = {toxinidir}{/}tests{:}{toxinidir}
  PATH = {env:PATH}{:}{toxinidir}{/}scripts
  ; this is set in case test needs to stop & rerun marqo.
  MARQO_IMAGE_NAME = {[tox]marqo_image_name}
  ; Note: instead of setting this here, we could run . conf in the startup script itself
  MARQO_API_TESTS_ROOT = {toxinidir}
commands =
  bash {toxinidir}{/}scripts{/}start_dind_marqo_os.sh {[tox]marqo_image_name}
  pytest tests/ {posargs}


[testenv:py3-s2search]
setenv =
  TESTING_CONFIGURATION = S2SEARCH_OS
  PYTHONPATH = {toxinidir}{/}tests{:}{toxinidir}
  PATH = {env:PATH}{:}{toxinidir}{/}scripts
  ; this is set in case test needs to stop & rerun marqo.
  MARQO_IMAGE_NAME = {[tox]marqo_image_name}
  ; Note: instead of setting this here, we could run . conf in the startup script itself
  MARQO_API_TESTS_ROOT = {toxinidir}
commands =
  bash {toxinidir}{/}scripts{/}start_s2search_backend.sh {[tox]marqo_image_name}
  pytest tests/ {posargs}


[testenv:py3-arm64_local_os]
setenv =
  TESTING_CONFIGURATION = ARM64_LOCAL_MARQO_OS
  PYTHONPATH = {toxinidir}{/}tests{:}{toxinidir}
  PATH = {env:PATH}{:}{toxinidir}{/}scripts
  ; this is set in case test needs to stop & rerun marqo.
  MARQO_IMAGE_NAME = {[tox]marqo_image_name}
  ; Note: instead of setting this here, we could run . conf in the startup script itself
  MARQO_API_TESTS_ROOT = {toxinidir}
commands =
  bash {toxinidir}{/}scripts{/}start_arm64_local_marqo_os.sh {[tox]marqo_image_name}
  pytest tests/ {posargs}


[testenv:py3-cuda_dind_os]
setenv =
  TESTING_CONFIGURATION = CUDA_DIND_MARQO_OS
  PYTHONPATH = {toxinidir}{/}tests{:}{toxinidir}
  PATH = {env:PATH}{:}{toxinidir}{/}scripts
  ; this is set in case test needs to stop & rerun marqo.
  MARQO_IMAGE_NAME = {[tox]marqo_image_name}
  ; might need to be changed to conf MARQO_API_TESTS_ROOT in the future, if tox file moves from the root
  MARQO_API_TESTS_ROOT = {toxinidir}
commands =
  bash {toxinidir}{/}scripts{/}start_cuda_dind_marqo_os.sh {[tox]marqo_image_name}
  pytest tests/ {posargs}
  

[testenv:py3-local_os_unit_tests]
; this test assumes the environment already has the required python packages installed
deps =
  {[testenv]deps}
setenv =
  TESTING_CONFIGURATION = LOCAL_MARQO_OS_UNIT_TESTS
  PYTHONPATH = {toxinidir}{/}tests{:}{toxinidir}{:}{toxinidir}{/}temp{/}marqo{/}src{:}{toxinidir}{/}src
  PATH = {env:PATH}{:}{toxinidir}{/}scripts
commands =
  bash {toxinidir}{/}scripts{/}start_local_marqo_os_no_marqo.sh
  pytest temp{/}marqo{/}tests{/} {posargs}

[testenv:py3-local_os_unit_tests_w_requirements]
; installs pip packages into the testing venv
deps =
  {[testenv]deps}
setenv =
  TESTING_CONFIGURATION = LOCAL_MARQO_OS_UNIT_TESTS
  PYTHONPATH = {toxinidir}{/}tests{:}{toxinidir}{:}{toxinidir}{/}temp{/}marqo{/}src{:}{toxinidir}{/}src
  PATH = {env:PATH}{:}{toxinidir}{/}scripts
commands =
  pip install --upgrade -r {toxinidir}{/}temp{/}marqo{/}requirements.txt
  bash {toxinidir}{/}scripts{/}start_local_marqo_os_no_marqo.sh
  pytest temp{/}marqo{/}tests{/} {posargs}
